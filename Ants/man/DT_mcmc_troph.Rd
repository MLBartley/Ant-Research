% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DT_model_functions.R
\name{DT_mcmc_troph}
\alias{DT_mcmc_troph}
\title{Discrete Time MCMC Estimation for Trophallaxis data}
\usage{
DT_mcmc_troph(starts_data, ant_file, chamber, title, a, b, c, d, theta,
  states = 2, n_mcmc, delta_t, hours, param_start, fig_save = TRUE,
  fig_path, fig_name, plot_title)
}
\arguments{
\item{starts_data}{Data file of number of trophallaxis 
interactions starting per delta_t delta_t.}

\item{ant_file}{Data file of ant trophallaxis interaction 
information, including Location and start times.}

\item{title}{Title of diagnostic plots used to check model 
results.}

\item{a}{Hyperprior for rates of starting interactions during 
"low" state. (lambda_L)}

\item{b}{Hyperprior for rates of starting interactions during 
"low" state. (lambda_L)}

\item{c}{Hyperprior for rates of starting interactions during 
"high" state. (lambda_H)}

\item{d}{Hyperprior for rates of starting interactions during 
"high" state. (lambda_H)}

\item{theta}{Hyperprior for state probability transition 
matrix  (P)}

\item{states}{Number of states, generally 2 ("low", "high").}

\item{n_mcmc}{Number of mcmc iterations}

\item{delta_t}{Time segment the start data is binned into.}

\item{hours}{Hours of ant observations reflected in data file.}

\item{param_start}{Starting values for the chains of estimated
parameters.}

\item{fig_save}{If "TRUE", plots will save in path provided as
.jpeg files.}

\item{fig_path}{Path needed to send plot figures to folder.}

\item{fig_name}{Base name of plot files to be saved.}
}
\value{
(1) - estimates of X, lambda, P (2) - 2x2 visual of 
  estimates over time (runs)
}
\description{
The purpose of this function is to find MCMC generated 
estimates of (1) - the state (X_t = high/low troph rates) of 
the colony at time t (2) - the specific rates of interaction 
start times (lambda) of each state (3) - the probability of 
moving from one state to another (P matrix)
}
\examples{
theta = matrix(data = c(90, 10, 10, 90), nrow = 2, ncol = 2, byrow = T) 
out.high = DT.mcmc.troph(data = high.y, title = 'High Density',
                         a = 5, b = 2, 
theta = theta, states = 2, n_mcmc = 3000)
}
